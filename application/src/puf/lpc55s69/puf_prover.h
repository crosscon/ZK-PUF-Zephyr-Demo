#ifndef PUF_PROVER_H
#define PUF_PROVER_H

#include "fsl_puf.h"
#include "flash_handler.h"

#define GENERATE_PUF_STUFF 1

extern uint8_t hardcoded_activation_code[PUF_ACTIVATION_CODE_SIZE];
extern uint8_t hardcoded_key_code[PUF_KEY_CODE_SIZE];

/**
 * @brief Initializes the Physically Unclonable Function (PUF) module.
 *
 * This function sets up and optionally enrolls the PUF hardware, loads or generates
 * the activation code and intrinsic key code, and prepares the PUF for key retrieval.
 *
 * @return kStatus_Success on success, or a non-zero error code on failure.
 */
int init_puf(void);

/**
 * @brief Reconstructs the PUF key from a previously generated key code.
 *
 * The key_code buffer should contain the code generated by
 * inner_puf_create_intrinsic_keycode(), and puf_key must point to a buffer of
 * size PUF_KEY_SIZE for receiving the reconstructed key.
 *
 * @param key_code Pointer to the intrinsic key code buffer.
 * @param puf_key Pointer to the buffer for the reconstructed key.
 * @return kStatus_Success on success, or an error code on failure.
 */
int puf_get_key(uint8_t *puf_key);

/**
 * @brief Securely wipes the PUF key from memory.
 *
 * Overwrites the puf_key buffer with zeros and verifies the wipe.
 *
 * @param puf_key Pointer to the buffer containing the PUF key.
 * @return 0 on success (all bytes cleared), or -1 if any byte remains non-zero.
 */
int puf_flush_key(uint8_t *puf_key);

#endif /* PUF_PROVER_H */
